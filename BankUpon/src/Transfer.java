
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Tandons
 */
public class Transfer extends javax.swing.JFrame {

    /**
     * Creates new form Transfer
     */
    public Transfer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldDebitAccountNumber = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldDebitAccountName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldDebitAccountBalance = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldTransactionAmount = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldDebitTransactionParticulars = new javax.swing.JTextField();
        jTextFieldDebitAccountBalanceAfterPosting = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldCreditAccountNumber = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldCreditAccountName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldCreditAccountBalance = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldCreditTransactionParticulars = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldCreditAccountBalanceAfterPosting = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jButtonValidate = new javax.swing.JButton();
        jButtonPost = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jXDatePickerTransactionDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldTransactionId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BankUpon - Transfer Transaction");

        jLabel1.setFont(new java.awt.Font("Algerian", 1, 30)); // NOI18N
        jLabel1.setText("Transfer Transaction");

        jLabel2.setText("Debit Account Number");

        jLabel3.setText("Debit Account Name");

        jTextFieldDebitAccountName.setEditable(false);
        jTextFieldDebitAccountName.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFieldDebitAccountName.setEnabled(false);

        jLabel4.setText("Debit Account Balance");

        jTextFieldDebitAccountBalance.setEditable(false);
        jTextFieldDebitAccountBalance.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFieldDebitAccountBalance.setEnabled(false);

        jLabel5.setText("Transaction Amount");

        jLabel6.setText("Debit Account Balance after Posting");

        jLabel7.setText("Debit Transaction Particulars");

        jTextFieldDebitTransactionParticulars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDebitTransactionParticularsActionPerformed(evt);
            }
        });

        jTextFieldDebitAccountBalanceAfterPosting.setEditable(false);
        jTextFieldDebitAccountBalanceAfterPosting.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFieldDebitAccountBalanceAfterPosting.setEnabled(false);

        jLabel8.setText("Credit Account Number");

        jTextFieldCreditAccountNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCreditAccountNumberActionPerformed(evt);
            }
        });

        jLabel9.setText("Credit Account Name");

        jTextFieldCreditAccountName.setEditable(false);
        jTextFieldCreditAccountName.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFieldCreditAccountName.setEnabled(false);

        jLabel10.setText("Credit Account Balance");

        jTextFieldCreditAccountBalance.setEditable(false);
        jTextFieldCreditAccountBalance.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFieldCreditAccountBalance.setEnabled(false);

        jLabel11.setText("Credit Transaction Particulars");

        jLabel12.setText("Credit Account Balance after Posting");

        jTextFieldCreditAccountBalanceAfterPosting.setEditable(false);
        jTextFieldCreditAccountBalanceAfterPosting.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jTextFieldCreditAccountBalanceAfterPosting.setEnabled(false);

        jButtonValidate.setText("Validate");
        jButtonValidate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValidateActionPerformed(evt);
            }
        });

        jButtonPost.setText("Post");
        jButtonPost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPostActionPerformed(evt);
            }
        });

        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel13.setText("Transaction Date");

        jXDatePickerTransactionDate.setEditable(false);

        jLabel14.setText("Transaction Id");

        jTextFieldTransactionId.setEditable(false);
        jTextFieldTransactionId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextFieldTransactionId.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSeparator3)
                        .addComponent(jSeparator2)
                        .addComponent(jSeparator1)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(474, 474, 474)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(37, 37, 37)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7))
                                    .addGap(41, 41, 41)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextFieldDebitAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextFieldDebitAccountName)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jTextFieldTransactionAmount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                                                .addComponent(jTextFieldDebitAccountBalance, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addComponent(jTextFieldDebitTransactionParticulars, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                                            .addComponent(jTextFieldDebitAccountBalanceAfterPosting, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(180, 180, 180)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel8)
                                                .addComponent(jLabel9)
                                                .addComponent(jLabel10))
                                            .addGap(116, 116, 116)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jTextFieldCreditAccountBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextFieldCreditAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextFieldCreditAccountName, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel12)
                                                .addComponent(jLabel11))
                                            .addGap(41, 41, 41)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jTextFieldCreditTransactionParticulars, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextFieldCreditAccountBalanceAfterPosting, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(435, 435, 435)
                                    .addComponent(jButtonValidate)
                                    .addGap(143, 143, 143)
                                    .addComponent(jButtonPost)
                                    .addGap(168, 168, 168)
                                    .addComponent(jButton3)))
                            .addGap(8, 8, 8)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel13)
                        .addGap(92, 92, 92)
                        .addComponent(jXDatePickerTransactionDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(299, 299, 299)
                        .addComponent(jLabel14)
                        .addGap(43, 43, 43)
                        .addComponent(jTextFieldTransactionId, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldDebitAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldCreditAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldDebitAccountName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldCreditAccountName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldDebitAccountBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jTextFieldCreditAccountBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldTransactionAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextFieldDebitTransactionParticulars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jTextFieldCreditTransactionParticulars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButtonPost)
                            .addComponent(jButtonValidate))
                        .addGap(63, 63, 63))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldDebitAccountBalanceAfterPosting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jTextFieldCreditAccountBalanceAfterPosting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jXDatePickerTransactionDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jTextFieldTransactionId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCreditAccountNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCreditAccountNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCreditAccountNumberActionPerformed

    private void jButtonValidateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValidateActionPerformed
        
                   
        String DebitAccountNumber = jTextFieldDebitAccountNumber.getText(); 
        if (DebitAccountNumber.isEmpty()) {
            JOptionPane.showMessageDialog(this,"Debit Account Number not Entered");
        }
        else
    {
        
       try { Class.forName("java.sql.DriverManager"); 
Connection con = (Connection) DriverManager.getConnection (BankUponDataSource.CONNECTIONSTRING, BankUponDataSource.USERID, BankUponDataSource.PASSWD);   

Statement stmt = (Statement) con.createStatement();
     
String query="select AccountName, AccountBalance, ClosureDate from Accounts where AccountNumber = '"+DebitAccountNumber+"';";      

String AccountClosureDate = "";

ResultSet rs = stmt.executeQuery(query);
if (rs.next()) {
    
    jTextFieldDebitAccountName.setText(rs.getString("AccountName"));  
    jTextFieldDebitAccountBalance.setText(rs.getString("AccountBalance"));  
    
}    
else 
    JOptionPane.showMessageDialog(this,"Invalid Debit Account Number!");
}
catch (Exception e) 
{ JOptionPane.showMessageDialog (this, e.getMessage());   } 
}

        if (jTextFieldDebitTransactionParticulars.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,"Debit Transaction Particulars not Entered"); 
            }
            
            
         String CreditAccountNumber = jTextFieldCreditAccountNumber.getText(); 
        if (CreditAccountNumber.isEmpty()) {
            JOptionPane.showMessageDialog(this,"Credit Account Number not Entered");
        }
        else
    {
        
       try { Class.forName("java.sql.DriverManager"); 
       
Connection con = (Connection) DriverManager.getConnection (BankUponDataSource.CONNECTIONSTRING, BankUponDataSource.USERID, BankUponDataSource.PASSWD);   

Statement stmt = (Statement) con.createStatement();
     
String query="select AccountName, AccountBalance, ClosureDate from Accounts where AccountNumber = '"+CreditAccountNumber+"';";      

String AccountClosureDate = "";

ResultSet rs = stmt.executeQuery(query);
if (rs.next()) {
    
    jTextFieldCreditAccountName.setText(rs.getString("AccountName"));  
    jTextFieldCreditAccountBalance.setText(rs.getString("AccountBalance"));  
    
}    
else 
    JOptionPane.showMessageDialog(this,"Invalid Credit Account Number!");
}
catch (Exception e) 
{ JOptionPane.showMessageDialog (this, e.getMessage());   } 
}

        if (jTextFieldCreditTransactionParticulars.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,"Credit Transaction Particulars not Entered"); 
            }
            
            
        
        
        
        
        
       if (jTextFieldTransactionAmount.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,"Transaction Amount not Entered"); 
                        }
       else
       {
           double TransactionAmount = Double.parseDouble(jTextFieldTransactionAmount.getText());
       }
       
        Calendar cal = Calendar.getInstance();
        jXDatePickerTransactionDate.setDate(cal.getTime());
        

    }//GEN-LAST:event_jButtonValidateActionPerformed

    private void jTextFieldDebitTransactionParticularsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDebitTransactionParticularsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDebitTransactionParticularsActionPerformed

    private void jButtonPostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPostActionPerformed
    DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
    String TransactionDate = format.format(jXDatePickerTransactionDate.getDate());
    String TransactionType = "Transfer";
    String DebitAccountNumber=jTextFieldDebitAccountNumber.getText();
    String DebitTransactionParticulars=jTextFieldDebitTransactionParticulars.getText();        
    Double DebitAccountBalance = Double.parseDouble(jTextFieldDebitAccountBalance.getText());
    Double TransactionAmount = Double.parseDouble(jTextFieldTransactionAmount.getText());
    String Debit= "D", Credit = "C";
    Double DebitAccountBalanceAfterPosting = 0.0;
    String CreditAccountNumber = jTextFieldCreditAccountNumber.getText();
    String CreditTransactionParticulars = jTextFieldCreditTransactionParticulars.getText();       
    Double CreditAccountBalance = Double.parseDouble(jTextFieldCreditAccountBalance.getText());
    Double CreditAccountBalanceAfterPosting = 0.0;
    Boolean PostTransaction = true;
    
       
    ResultSet rs = null;
    try { Class.forName("java.sql.DriverManager"); 
    Connection con = (Connection) DriverManager.getConnection (BankUponDataSource.CONNECTIONSTRING, BankUponDataSource.USERID, BankUponDataSource.PASSWD);   

    Statement stmt = (Statement) con.createStatement();
             
        if (DebitAccountBalance >= TransactionAmount)
        {
            DebitAccountBalanceAfterPosting  = DebitAccountBalance - TransactionAmount;
            CreditAccountBalanceAfterPosting = CreditAccountBalance + TransactionAmount;
        }
        else
        {
            PostTransaction = false;
            JOptionPane.showMessageDialog(this,"Insuffecient Debit Account Balance");
        }
        
    if (PostTransaction)
    {
    jTextFieldDebitAccountBalanceAfterPosting.setText(Double.toString(DebitAccountBalanceAfterPosting));
    jTextFieldCreditAccountBalanceAfterPosting.setText(Double.toString(CreditAccountBalanceAfterPosting));
    
    String query="INSERT INTO transactions (TransactionDate, TransactionType) VALUES  ('"+TransactionDate+"','"+TransactionType+"');";      
    long key = -1L;

    stmt.executeUpdate(query, Statement.RETURN_GENERATED_KEYS);
    rs = stmt.getGeneratedKeys();

    if (rs != null && rs.next()) {
       key = rs.getLong(1); 
    }

    query="INSERT INTO TransactionDetails (TransactionId, AccountNumber, TransactionParticulars, DebitCredit, TransactionAmount, BalanceAfterPosting) VALUES  ('"+key+"','"+DebitAccountNumber+"','"+DebitTransactionParticulars+"','"+Debit+"','"+TransactionAmount+"','"+DebitAccountBalanceAfterPosting+"');";      
    stmt.executeUpdate(query);
    
    query="INSERT INTO TransactionDetails (TransactionId, AccountNumber, TransactionParticulars, DebitCredit, TransactionAmount, BalanceAfterPosting) VALUES  ('"+key+"','"+CreditAccountNumber+"','"+CreditTransactionParticulars+"','"+Credit+"','"+TransactionAmount+"','"+CreditAccountBalanceAfterPosting+"');";      
    stmt.executeUpdate(query);

    query="update accounts set AccountBalance = "+DebitAccountBalanceAfterPosting+" where AccountNumber = '"+DebitAccountNumber+"';";     
    stmt.executeUpdate(query);

    query="update accounts set AccountBalance = "+CreditAccountBalanceAfterPosting+" where AccountNumber = '"+CreditAccountNumber+"';";     
    stmt.executeUpdate(query);

    JOptionPane.showMessageDialog(this,"Transaction created " + key);  
    jTextFieldTransactionId.setText(Long.toString(key));      

    } 
}
catch (Exception e) 
{ JOptionPane.showMessageDialog (this, e.getMessage());   
}          // TODO add your handling code here:
    }//GEN-LAST:event_jButtonPostActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transfer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonPost;
    private javax.swing.JButton jButtonValidate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTextFieldCreditAccountBalance;
    private javax.swing.JTextField jTextFieldCreditAccountBalanceAfterPosting;
    private javax.swing.JTextField jTextFieldCreditAccountName;
    private javax.swing.JTextField jTextFieldCreditAccountNumber;
    private javax.swing.JTextField jTextFieldCreditTransactionParticulars;
    private javax.swing.JTextField jTextFieldDebitAccountBalance;
    private javax.swing.JTextField jTextFieldDebitAccountBalanceAfterPosting;
    private javax.swing.JTextField jTextFieldDebitAccountName;
    private javax.swing.JTextField jTextFieldDebitAccountNumber;
    private javax.swing.JTextField jTextFieldDebitTransactionParticulars;
    private javax.swing.JTextField jTextFieldTransactionAmount;
    private javax.swing.JTextField jTextFieldTransactionId;
    private org.jdesktop.swingx.JXDatePicker jXDatePickerTransactionDate;
    // End of variables declaration//GEN-END:variables
}
